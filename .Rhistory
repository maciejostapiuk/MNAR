for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-mnar(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_standard)
results[r,3] <- weighted.mean(sample$y, g_generl)
}
y_true <- pop_data$y
library(sampling)
gencalib <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 3)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-mnar(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_standard)
results[r,3] <- weighted.mean(sample$y, g_generl)
}
library(sampling)
gencalib <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 3)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencalib(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_standard)
results[r,3] <- weighted.mean(sample$y, g_generl)
}
library(sampling)
gencal <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 3)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencal(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_standard)
results[r,3] <- weighted.mean(sample$y, g_generl)
}
library(sampling)
gencal <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 3)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencal(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_standard)
results[r,3] <- weighted.mean(sample$y, g_generl)
}
library(sampling)
gencal <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)
}
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 3)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencal(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_standard)
results[r,3] <- weighted.mean(sample$y, g_generl)
}
rm(list = ls())
library(sampling)
gencal <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 3)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencal(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_standard)
results[r,3] <- weighted.mean(sample$y, g_generl)
}
library(sampling)
gencal <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 2)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencal(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_generl)
}
boxplot(results - mean(pop_data$y))
abline(h = 0, col = "red")
y_true <- pop_data$y
apply(results, 2, FUN = function(x) c(bias = mean(x) - mean(y_true),
sd = sd(x),
rmse = sqrt( (mean(x) - mean(y_true))^2 + var(x))))
library(sampling)
gencal <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
if (dim(nonresponse) == dim(instrumental_variables)){
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)}
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 2)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencal(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_generl)
}
dim(xs)
dim(zs)
dim(xs) == dim(zs)
sum(dim(xs) == dim(zs))
len(xs)
length(xs)
nrow(xd)
nrow(xd)
nrow(xs)
ncol(xs)
xs
library(sampling)
gencal <-  function(totals, nonresponse, instrumental_variables = NULL, target_variables, initial_weights) {
if (sum(dim(nonresponse) == dim(instrumental_variables)) == ncol(nonresponse) -1) {
weights <- gencalib(nonresponse,
instrumental_variables,
initial_weights,
total = totals,
method = "raking")
return(weights)}
}
### testing
set.seed(123)
n <- 10000
x1 <- rlnorm(n, 0, 1)
x2 <- rexp(n, 1)
y <- 1 + x1 + x2 + rnorm(n)
pr <- plogis(1 + 0.5*x1 - 0.5*y)
pop_data <- data.frame(x1, x2, y, pr)
totals <- c(N = n, colSums(pop_data[, c("x1", "x2")]))
n_reps <- 10000
results <- matrix(0, n_reps, 2)
for (r in 1:n_reps) {
flag <- rbinom(n, 1, pop_data$pr)
sample <- pop_data[flag == 1, ]
xs = model.matrix(~x1 + x2, sample)
zs = model.matrix(~x1 + y, sample)
d = rep(1, NROW(sample))
## generalized calibration
g_generl <-gencal(totals = totals,nonresponse = xs, instrumental_variables=zs, target_variables=y,initial_weights=d)
## naive
results[r,1] <- mean(sample$y)
results[r,2] <- weighted.mean(sample$y, g_generl)
}
boxplot(results - mean(pop_data$y))
abline(h = 0, col = "red")
y_true <- pop_data$y
apply(results, 2, FUN = function(x) c(bias = mean(x) - mean(y_true),
sd = sd(x),
rmse = sqrt( (mean(x) - mean(y_true))^2 + var(x))))
